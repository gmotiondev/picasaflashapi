<?xml version="1.0"?>
<project name="picasa-flash-api" basedir="." default="build">
	
	<tstamp>
		<format property="TODAY" pattern="dd.MM.yyyy" locale="en,UK"/>
	</tstamp>
	
	<pathconvert property="project.classes" pathsep=" ">
		<fileset dir="src">
			<include name="**/*.as"/>
			<include name="**/*.mxml"/>
		</fileset>
		<compositemapper>
			<packagemapper from="${src.flex.dir}\*.as" to="*"/>
			<packagemapper from="${src.flex.dir}/*.as" to="*"/>
			</compositemapper>
	</pathconvert>
	
	<property environment="env"/>
	<property name="project.swc" value="${ant.project.name}-r${env.SVN_REVISION}.swc"/>
	<property name="flex.compc.options" value="-coverage=false -include-classes=${project.classes}"/>
	
	<import file="build-imports.xml" />
	<path id="flex.lib.path"/>
	
	<target name="build" depends="init,flex-library" description="Build the library"/>

	<target name="init-tests" depends="init">
		<mkdir dir="${build.dir}/${pmd.reports.loc}"/>
		<mkdir dir="${build.dir}/${cpd.reports.loc}"/>
		<mkdir dir="${build.dir}/${metrics.reports.loc}"/>
		<mkdir dir="${build.dir}/${fluint.reports.loc}"/>
		<mkdir dir="${build.dir}/${coverage.reports.loc}"/>
	</target>
	
	<target name="unit-tests" depends="init-tests">
		
		<property name="absolute.coverage.dir" location="${build.dir}/${coverage.reports.loc}"/>
		
		<copy todir="${build.dir}/${test.bin.dir}/assets" overwrite="true">
			<fileset dir="${test.src.dir}/assets" />
		</copy>

		<copy
			file="${fluint.home}/AIRTestRunner.swf"
			tofile="${build.dir}/${test.bin.dir}/AIRTestRunner.swf"/>

		<copy
			file="${fluint.home}/AIRTestRunner-app.xml"
			tofile="${build.dir}/${test.bin.dir}/AIRTestRunner-app.xml"/>

		<path id="tests.lib.path">
	        <pathelement location="tests/libs" />
	        <pathelement location="bin" />
    	</path>
    	
		<mxmlc
			src="${test.src.dir}/MainTestModule.mxml"
			dest="${build.dir}/${test.bin.dir}/MainTestModule.swf"
			config="${air.config}"
			options="-coverage=true -coverage-metadata='${absolute.coverage.dir}/picasa-flash-api.cvm'"
			lib.path.id="tests.lib.path"/>
		
		<exec executable="${x-wrapper}" failonerror="true">
			<arg line="${flex.dir}/bin/adl ${build.dir}/${test.bin.dir}/AIRTestRunner-app.xml - - -headless -reportDir='${build.dir}/${fluint.reports.loc}' -fileSet='${build.dir}/${test.bin.dir}/MainTestModule.swf' -failOnError -coverage-agent-type=headless -coverage-output='${absolute.coverage.dir}/picasa-flash-api.cvr' -coverage-metadata='${absolute.coverage.dir}/picasa-flash-api.cvm' -emma-report='${absolute.coverage.dir}/picasa-flash-api.xml'"/>
		</exec>

	</target>
	
	<target name="violations-check" depends="init-tests">

		<flexPmd
			sourceDirectory="${src.flex.dir}"
			outputDirectory="${build.dir}/${pmd.reports.loc}"/>

		<flexCpd
			minimumTokenCount="50"
			outputFile="${build.dir}/${cpd.reports.loc}/cpd.xml">
			<fileset dir="${src.flex.dir}">
				<include name="**/*.as"/>
				<include name="**/*.mxml"/>
			</fileset>
		</flexCpd>

		<flexMetrics
			sourcedirectory="${src.flex.dir}/"
			outputfile="${build.dir}/${metrics.reports.loc}/javancss.xml"/>

	</target>
	
	<macrodef name="compc" description="">
		<attribute name="src.dir" />
		<attribute name="dest" />
		<attribute name="lib.path.id" default="flex.lib.path" />
		<attribute name="options" default="${flex.compc.options}" />
		<attribute name="config" default="${flex.config}" />
		
		<sequential>
			<fail>
				<condition>
					<not>
						<isreference refid="@{lib.path.id}" />
					</not>
				</condition>
			</fail>
		
		<pathconvert property="_compc.lib.files" refid="@{lib.path.id}" pathsep="," />
			<condition property="_compc.libpath" value='-library-path+="${_compc.lib.files}"' else="">
				<not>
					<equals arg1="" arg2="${_compc.lib.files}" trim="true" />
				</not>
			</condition>

			<java jar="${flex.compc.jar}" dir="." fork="true" failonerror="true">
				<jvmarg value="-Xmx512m" />
				<arg line="@{options} ${_compc.libpath}"/>
				<arg value="+flexlib=${flex.frameworks.dir}"/>
				
				<arg value="-compiler.namespaces.namespace"/>
				<arg value="http://www.prasa.sk/picasaflashapi"/>
				<arg value="src/manifest.xml"/>
				
				<arg value="-include-namespaces"/>
				<arg value="http://www.prasa.sk/picasaflashapi"/>
				
				<arg value="-compute-digest=false"/>
				<arg value="-metadata.date"/>
				<arg value="${TODAY}"/>
				
				<arg value="-metadata.description"/>
				<arg value="Picasa Flash API (as3)"/>
				
				<arg value="-metadata.title"/>
				<arg value="Picasa Flash API (as3)"/>
				
				<arg value="-metadata.creator"/>
				<arg value="Michal Gron (michal.gron@gmail.com)"/>
				
				<arg value="-metadata.publisher"/>
				<arg value="Michal Gron (michal.gron@gmail.com)"/>
				
				<arg value="-load-config=@{config}"/>
				<arg value="-source-path=@{src.dir}"/>
				<arg value="-output=@{dest}"/>
			</java>
		</sequential>
	</macrodef>
	
	<taskdef name="flexPmd"
		classname="com.adobe.ac.pmd.ant.FlexPmdAntTask"
		classpath="${pmd.home}/flex-pmd-ant-task-${pmd.version}.jar">
		<classpath>
			<pathelement location="${pmd.home}/flex-pmd-ruleset-api-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/flex-pmd-ruleset-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/flex-pmd-core-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/as3-plugin-utils-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/as3-parser-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/pmd-4.2.5.jar"/>
			<pathelement location="${pmd.home}/commons-lang-2.4.jar"/>
			<pathelement location="${pmd.home}/flex-pmd-files-${pmd.version}.jar"/>
 			<pathelement location="${pmd.home}/as3-parser-api-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/plexus-utils-1.0.2.jar"/>
		</classpath>
	</taskdef>

	<taskdef
		name="flexCpd"
		classname="com.adobe.ac.cpd.ant.FlexCpdAntTask"
		classpath="${cpd.home}/flex-pmd-cpd-ant-task-${cpd.version}.jar">
		<classpath>
			<pathelement location="${cpd.home}/flex-pmd-files-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/flex-pmd-cpd-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/as3-plugin-utils-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/as3-parser-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/as3-parser-api-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/pmd-4.2.5.jar" />
		</classpath>
	</taskdef>

	<taskdef name="flexMetrics" classname="com.adobe.ac.pmd.metrics.ant.FlexMetricsAntTask"
		classpath="${metrics.home}/flex-pmd-metrics-ant-task-${metrics.version}.jar">
		<classpath>
			<pathelement location="${metrics.home}/flex-pmd-files-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/flex-pmd-metrics-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/as3-plugin-utils-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/as3-parser-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/as3-parser-api-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/commons-lang-2.4.jar" />
			<pathelement location="${metrics.home}/flex-pmd-ruleset-api-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/pmd-4.2.5.jar" />
			<pathelement location="${metrics.home}/dom4j-1.6.1.jar"/>
	</classpath>
	</taskdef>
</project>