<?xml version="1.0"?>
<project name="picasaflashapi" basedir="." default="lib">
	<property file="build.properties" />
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
	<target name="lib" depends="docs">
		<tstamp>
			<format property="TODAY" pattern="dd.MM.yyyy" locale="en,UK"/>
		</tstamp>
		<pathconvert property="flex.classes" pathsep=" ">
			<fileset dir="${src.dir}">
				<include name="**/*.as"/>
				<include name="**/*.mxml"/>
			</fileset>
			<compositemapper>
				<packagemapper from="${src.dir}\*.as" to="*"/>
				<packagemapper from="${src.dir}\*.mxml" to="*"/>
				<packagemapper from="${src.dir}/*.as" to="*"/>
				<packagemapper from="${src.dir}/*.mxml" to="*"/>
			</compositemapper>
		</pathconvert>
		<compc output="${bin.dir}/${library.name}.swc" include-classes="${flex.classes}" compute-digest="false">
			<source-path path-element="${src.dir}" />
			<namespace uri="http://www.prasa.sk/picasaflashapi" manifest="${src.dir}/manifest.xml" />
			<in uri="http://www.prasa.sk/picasaflashapi" />
			<metadata description="Picasa Flash API (as3)" title="Picasa Flash API (as3)" date="${TODAY}">
				<creator name="Michal Gron (michal.gron@gmail.com)" />
				<publisher name="Michal Gron (michal.gron@gmail.com)" />
			</metadata>
		</compc>
		<echo>SWC created</echo>
	</target>

	<target name="init" description="Set up the project">
		<mkdir dir="${bin.dir}"/>
		<mkdir dir="${docs.dir}"/>
	</target>

	<target name="clean" description="Clean the project">
        <delete dir="${bin.dir}" quiet="true" />
        <delete dir="${docs.dir}" quiet="true" />
    </target>

	<target name="docs" depends="init">
		<!-- Clean out the contents of the doc directory, without delete "docs" -->
		<delete includeemptydirs="true">
			<fileset dir="${docs.dir}" includes="**/*" />
		</delete>
		<exec executable="${asdoc.exe}" spawn="no">
			<!-- Place the documentation in the "docs" directory -->
			<arg line="-o ${docs.dir}" />

			<!-- Include in the corelib.swc in the class path -->
			<!--<arg line="-l ${corelib.swc}" />-->

			<!-- Specify the main source path as "src" -->
			<arg line="-sp ${src.dir}" />

			<!-- Document all of the classes in the "src" tree -->
			<arg line="-ds ${src.dir} " />

			<!-- Include the library name in the window title -->
			<arg line="-window-title 'Picasa Flash API Documentation - ${library.name}' "/>
			<arg line="-main-title 'Picasa Flash API Documentation'"/>
		</exec>
	</target>

	<target name="violations-check" depends="init">

		<!-- remove the test results -->
		<delete dir="${pmd.reports.loc}" quiet="true" />
		<delete dir="${cpd.reports.loc}" quiet="true" />
		<delete dir="${metrics.reports.loc}" quiet="true" />

		<!-- create the folders for test results -->
		<mkdir dir="${pmd.reports.loc}" />
		<mkdir dir="${cpd.reports.loc}" />
		<mkdir dir="${metrics.reports.loc}" />

		<flexPmd
			sourceDirectory="${src.dir}" 
			outputDirectory="${pmd.reports.loc}"/>

		<flexCpd
			minimumTokenCount="50"
			outputFile="${cpd.reports.loc}/cpd.xml">
			<fileset dir="${src.dir}">
				<include name="**/*.as"/>
				<include name="**/*.mxml"/>
			</fileset>
		</flexCpd>

		<flexMetrics
			sourcedirectory="${src.dir}/"
			outputfile="${metrics.reports.loc}/javancss.xml"/>

	</target>

	<target  name="unit-tests">
		<!-- remove the test results -->
		<delete dir="${fluint.reports.loc}" quiet="true" />

		<!-- create the folders for test results -->
		<mkdir dir="${fluint.reports.loc}" />

		<!-- copy dependencies/app to tests dir -->
		<copy todir="${bin.dir}/assets">
			<fileset dir="${test.src.dir}/assets" />
		</copy>

		<!-- Compile MainTestModule -->
		<mxmlc file="${test.src.dir}/MainTestModule.mxml" 
		output="${bin.dir}/MainTestModule.swf"
		actionscript-file-encoding="UTF-8"
		keep-generated-actionscript="false"
		incremental="true">
			<load-config filename="${air.config}"/>
			<source-path path-element="${flexsdk.home}/frameworks"/>
			<compiler.library-path dir="." append="true">
				<include name="tests/libs"/>
				<include name="bin"/>
			</compiler.library-path>
		</mxmlc>

		<fluint
			debug="true"
			headless="true"
			failonerror="false"
			workingDir="${bin.dir}"
			testRunner="${airtestrunner.exe}"
			outputDir="${fluint.reports.loc}">

				<fileset dir="${bin.dir}">
					<include name="**/*.swf"/>
				</fileset>
		</fluint>
	</target>

	<path id="libraries">
		<fileset dir="${fluint.home}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<taskdef
		name="fluint"
		classname="net.digitalprimates.ant.tasks.fluint.Fluint"
		classpathref="libraries"/>

	<taskdef name="flexPmd"
		classname="com.adobe.ac.pmd.ant.FlexPmdAntTask"
		classpath="${pmd.home}/flex-pmd-ant-task-${pmd.version}.jar">
		<classpath>
			<pathelement location="${pmd.home}/flex-pmd-ruleset-api-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/flex-pmd-ruleset-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/flex-pmd-core-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/as3-plugin-utils-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/as3-parser-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/pmd-4.2.5.jar"/>
			<pathelement location="${pmd.home}/commons-lang-2.4.jar"/>
			<pathelement location="${pmd.home}/flex-pmd-files-${pmd.version}.jar"/>
 			<pathelement location="${pmd.home}/as3-parser-api-${pmd.version}.jar"/>
			<pathelement location="${pmd.home}/plexus-utils-1.0.2.jar"/>
		</classpath>
	</taskdef>

	<taskdef
		name="flexCpd"
		classname="com.adobe.ac.cpd.ant.FlexCpdAntTask"
		classpath="${cpd.home}/flex-pmd-cpd-ant-task-${cpd.version}.jar">
		<classpath>
			<pathelement location="${cpd.home}/flex-pmd-files-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/flex-pmd-cpd-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/as3-plugin-utils-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/as3-parser-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/as3-parser-api-${cpd.version}.jar" />
			<pathelement location="${cpd.home}/pmd-4.2.5.jar" />
		</classpath>
	</taskdef>

	<taskdef name="flexMetrics" classname="com.adobe.ac.pmd.metrics.ant.FlexMetricsAntTask"
		classpath="${metrics.home}/flex-pmd-metrics-ant-task-${metrics.version}.jar">
		<classpath>
			<pathelement location="${metrics.home}/flex-pmd-files-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/flex-pmd-metrics-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/as3-plugin-utils-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/as3-parser-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/as3-parser-api-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/commons-lang-2.4.jar" />
			<pathelement location="${metrics.home}/flex-pmd-ruleset-api-${metrics.version}.jar" />
			<pathelement location="${metrics.home}/pmd-4.2.5.jar" />
			<pathelement location="${metrics.home}/dom4j-1.6.1.jar"/>
	</classpath>
	</taskdef>
</project>